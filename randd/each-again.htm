<!DOCTYPE html>
<html>
<head>
<script class="jsbin" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js"></script>
<meta charset=utf-8 />
<title>DBJ*Each Research</title>
<!--[if IE]>
  <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->
<style type="text/css" media="all">
  html,body { height:100%; width:100%; font:small/1.5 verdana, monospace; }
  article, aside, figure, footer, header, hgroup,
  menu, nav, section { display: block; }
  hr {height:3mm;}
  label, input { min-width: 40mm; margin:2px; padding:2px; border:1px dashed #ccc; }
  #konsole { border: 1px solid; padding:2mm; width:90%; height: 69%; overflow:auto; }
</style>
</head>
<body>
<form action="javascript:main('frm');" id="frm" >
<fieldset title="testing parameters">
<label >Input object size</label><input id="OBJECT_SIZE" value="10" />
<br />
<label >Loop length</label><input id="LOOP_LENGTH" value="10" />
<br />
<label >Number of runs</label><input id="NUMBER_OF_RUNS" value="10" />
<br />
</fieldset>
<hr />
<input type="submit" value="Start" />
</form>
<hr />
 <p id="konsole"></p>
</body>
<script type="text/javascript">
    ////////////////////////////////////////////////////////////////////////////////////////////
    var harvester = function(frm_id, defaults) {
        var  $frm = jQuery("form#" + frm_id, document.object),
    getval = function(id_) { return ($frm.find("input#"+id_).val() || defaults[id_]) - 0 ; };
    
    for ( name in defaults ) {
         defaults[name] = getval(name) ;
    }
        return defaults ;
};
//
function main ( ) {

    //
    function each(object, callback, args) {
        var name, i = 0,
        length = object.length,
        isObj = length === undefined || "function" === typeof object;
        if (isObj) {
            for (name in object) {
                if (callback.apply(object[name], args || [name, object[name]]) === false) {
                    break;
                }
            }
        } else {
            for (; i < length; ) {
                if (callback.apply(object[i++], args || [i - 1, object[i - 1]]) === false) {
                    break;
                }
            }
        }
        return object;
    }
    //----------------------------------------------------------------------------------------------
    var konsole = {
        el: function() { return document.getElementById('konsole'); },
        log: function() {
            var s = "\r\n" + [].join.call(arguments, ""), tid = setTimeout(function() { konsole.el().innerText += s; }, 0);
        }
    }
    , summa = (function() {
        var obj_ = {},
    sum_ = function(arr) { var l = arr.length, sum = 0; while (l--) { sum += arr[l]; }; return sum; },
    avg_ = function(arr) { return sum_(arr) / arr.length; },
    isArray = function(x) { return Object.prototype.toString.call(x) === "[object Array]"; };

        return {
            add: function(k, v) {
                v = v - 0;
                if (!isArray(obj_[k]))
                    obj_[k] = [v];
                else
                    obj_[k].push(v);
                return v;
            },
            sum: function(k) { return sum_(obj_[k] || []); },
            avg: function(k) { return avg_(obj_[k]); },
            all: function(k) { return obj_[k] || [] }
        };
    })();
    //----------------------------------------------------------------------------------------------
    function test(obj_siz, loop_siz) {
        var measure = function(fun) {
            var t1 = new Date(), counter = loop_siz;
            while (counter--) { fun(); }
            return (new Date() - t1) - 0;
        },
        make_object = function(size) { var o = { "size": size }; while (size--) { o[size] = size; }; return o; },
        s = [],
        o = make_object(obj_siz),
        cb = function() { s.push(this + "," + [].join.call(arguments)); },
        args = ["one", "two"];

        summa.add("dbj",  measure(function() { each(o, cb, args) }) );
        summa.add("jq",   measure(function() { jQuery.each(o, cb, args) }) );
    }
    //
    var LOOP_LENGTH = "LOOP_LENGTH", OBJECT_SIZE = "OBJECT_SIZE", NUMBER_OF_RUNS = "NUMBER_OF_RUNS",
    vals = harvester("frm", { OBJECT_SIZE: 1e1, LOOP_LENGTH: 1e1, NUMBER_OF_RUNS: 1e1 });
    konsole.log("Starting ", vals[NUMBER_OF_RUNS], " runs. With object size:", vals[OBJECT_SIZE], " , loop length: ", vals[LOOP_LENGTH]);
    var tid = setTimeout(function() {
        clearTimeout(tid); tid = null;
        for (var j = vals[NUMBER_OF_RUNS]; j--; ) { test(vals[OBJECT_SIZE], vals[LOOP_LENGTH]); }
        konsole.log("dbj   , total:", summa.sum("dbj"), " ms,\t\taverage:", summa.avg("dbj"));
        konsole.log("jQery , total:", summa.sum("jq"), " ms,\t\taverage:", summa.avg("jq"));
    }, 1000);

}
    //----------------------------------------------------------------------------------------------
</script>
</html>