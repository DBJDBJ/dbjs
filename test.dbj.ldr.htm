<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>TEST.DBJ.LDR.JS</title>
<link href="http://dbj.org/4/blueprint/screen.css" rel="stylesheet" type="text/css" media="screen" />
<!--[if IE]>
<link href="http://dbj.org/4/fblight/fbl.css" rel="stylesheet" type="text/css" />
<script src="http://dbj.org/4/fblight/fbl.js" type="text/javascript"></script>
<script type="text/javascript" >
    if (window.firebug) {
        firebug.env.debug = false;    // open minimized
        firebug.env.detectFirebug;  // do not initialize if Firebug is active
    }
    if (!window.JSON) {
        document.write('<s' + 'cript src=\'http://dbj.org/4/json2.js\' type=\'text/javascript\' ></' + 'script>');
    }
 </script>
<![endif]-->
<style type="text/css" media="all" >
    a { display:block; margin:11mm; padding:1mm; border:1px solid; font:14px/1.1 verdana; width:10%; }
</style>
</head>
<body>
<div id="container">
<a href="default.htm" >A</a>
<a href="test.dbj.ldr.htm" >B</a>
</div>
</body>
<script type="text/javascript">
    window.MAIN = function() {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        var livetip_style = "position: absolute;background-color: #cfc;padding: 4px;border: 2px solid #9c9;border-radius: 4px;-webkit-border-radius: 4px;  -moz-border-radius: 4px;";
        var $liveTip = $('<div id="livetip" style="' + livetip_style + '"></div>').hide().appendTo('body');
        var tipTitle = '',
    showTip,
    delay = 100;

        $('#container').bind('mouseover mouseout mousemove', function(event) {
            var $link = $(event.target).closest('a');
            if (!$link.length) { return; }
            var link = $link[0];
            dbj.cond(
        event.type,
        'mouseover', function() {
            showTip = window.setTimeout(function() {
                $link.data('tipActive', true);
                tipTitle = link.innerHTML
                link.title = '';
                $liveTip
        .html('<div>' + tipTitle + '</div><div>' + link.href + '</div>')
        .show()
        .css({
            top: event.pageY + 1,left: event.pageX + 1
        });

            }, delay);
        }
        , 'mouseout', function() {
            if ($link.data('tipActive')) {
                $link.removeData('tipActive');
                $liveTip.hide();
                link.title = tipTitle || link.title;
            } else {
                window.clearTimeout(showTip);
            }
        }
        , 'mousemove' && $link.data('tipActive'), function() {
            $liveTip.css({
                top: event.pageY + 1,left: event.pageX + 1
            });
        }
        , /*else*/function() { /* do nothing */ }
        )();
        });
        ////////////////////////////////////////////////////////////////////////////////////////////////////
    };
</script>
<script src="dbj.ldr.js" type="text/javascript" _CFG_="dbj.lib.cfg" _ONREADY_="MAIN" ></script>
<script type="text/javascript">
function each (object, callback, args) {
    var name, i = 0,
        length = object.length,
        isObj = length === undefined || "function" === typeof object; 
//    if (args) {
        if (isObj) {
            for (name in object) {
                if (callback.apply(object[name], args || [name,object[name]]) === false) {
                    break;
                }
            }
        } else {
            for (; i < length;) {
                if (callback.apply(object[i++], args || [i-1,object[i-1]]) === false) {
                    break;
                }
            }
        }
/*    } else {
        if (isObj) {
            for (name in object) {
                if (callback.call(object[name], name, object[name]) === false) {
                    break;
                }
            }
        } else {
            for (var value = object[0]; i < length && callback.call(value, i, value) !== false; value = object[++i]) {}
        }
    }
*/
    return object;
}
//
var measure = function ( fun, looplen ) {
var t1 = new Date(), counter = looplen || 1e3 ;
while ( counter-- ) { fun() ; }
return (new Date() - t1) + " ms, loop size: " + (looplen || 1e3);
}
//
make_object = function ( size ) { var o = { "size":size }; while( size-- ) { o[size] = size; }; return o; }
//
function test (obj_siz) {
var s=[], o = make_object(obj_siz), cb = function () { s.push(this+","+[].join.call(arguments));}, args = ["one", "two"] ;

return "object size: {0}, dbj each: {1}, jQ each: {2}".format( o.size, measure( function () {each( o, cb, args )} ),  measure( function () {each( o, cb, args )} )) ;
}

var final = [] , tid = top.setTimeout( function () { top.clearTimeout(tid); tid = null ;
for ( var j = 1; j--; ) { final.push( test(1e1) ); top.alert(final.join("\n")); } ;
},1 ) ;

</script>
</html>
